<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C Language on whowin - 发表我个人原创作品的技术博客</title>
    <link>https://whowin.gitee.io/categories/c-language/</link>
    <description>Recent content in C Language on whowin - 发表我个人原创作品的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 27 Dec 2022 16:43:29 +0800</lastBuildDate><atom:link href="https://whowin.gitee.io/categories/c-language/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何使用raw socket发送UDP报文</title>
      <link>https://whowin.gitee.io/post/blog/network/0006-send_udp_with_raw_socket/</link>
      <pubDate>Tue, 27 Dec 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0006-send_udp_with_raw_socket/</guid>
      <description>&lt;p&gt;前面写的一篇《Linux下如何在数据链路层接收原始数据包》举了一个实例，使用raw socket接收UDP数据报，但是发送一个数据包比接收要复杂一些，本文以一个实例说明如何使用raw socket发送一个UDP报文。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何计算UDP头的checksum</title>
      <link>https://whowin.gitee.io/post/blog/network/0003-checksum_of_udp_header/</link>
      <pubDate>Mon, 12 Dec 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0003-checksum_of_udp_header/</guid>
      <description>&lt;p&gt;UDP报头只有4个字段，分别是：源端口号、目的端口号、报文长度和报头checksum，其中的报头checksum这个字段在IPv4中并不是强制的，但在IPv6中是强制的，本文介绍UDP报头中checksum的计算方法，并给出相应的源程序。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux下如何在数据链路层接收原始数据包</title>
      <link>https://whowin.gitee.io/post/blog/network/0002-link_layer_programming/</link>
      <pubDate>Wed, 07 Dec 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0002-link_layer_programming/</guid>
      <description>&lt;p&gt;大多数的网络编程都是在应用层接收数据和发送数据的，本文介绍在数据链路层的网络编程方法，介绍如何在数据链路层直接接收从物理层发过来的原始数据数据包，文章给出了一个完整的范例程序。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C语言如何获取ipv6地址</title>
      <link>https://whowin.gitee.io/post/blog/network/0001-how_to_get_ipv6_in_c/</link>
      <pubDate>Sun, 16 Oct 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0001-how_to_get_ipv6_in_c/</guid>
      <description>&lt;p&gt;使用通常获取ipv4的IP地址的方法是无法获取ipv6地址的，本文介绍了使用C语言获取ipv6地址的三种方法，每种方法均给出了完整的源程序，本文所有实例在 ubuntu 20.04 下测试通过，gcc 版本 9.4.0。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C语言函数调用时的参数传递机制</title>
      <link>https://whowin.gitee.io/post/blog/c/0001-parameters_passing_mechanism/</link>
      <pubDate>Tue, 20 Sep 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/c/0001-parameters_passing_mechanism/</guid>
      <description>&lt;p&gt;本文通过实例验证了 C 语言函数调用时参数传递机制在 32 位和 64 位时的不同；阅读本文不仅需要 C 语言的知识，还需要有一些汇编语言的知识。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
