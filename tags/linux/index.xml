<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on whowin - 发表我个人原创作品的技术博客</title>
    <link>https://whowin.gitee.io/tags/linux/</link>
    <description>Recent content in linux on whowin - 发表我个人原创作品的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 06 Jan 2023 16:43:29 +0800</lastBuildDate><atom:link href="https://whowin.gitee.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用C语言实现服务器/客户端的TCP通信</title>
      <link>https://whowin.gitee.io/post/blog/network/0012-tcp_server_client_implementation_in_c/</link>
      <pubDate>Fri, 06 Jan 2023 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0012-tcp_server_client_implementation_in_c/</guid>
      <description>&lt;p&gt;本文力求使用简单的描述说明一个服务器/客户端TCP通信的基本程序框架，文中给出了服务器端和客户端的实例源程序，本文的程序在ubuntu 20.04中编译运行成功，gcc版本号为：9.4.0&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用C语言实现服务器/客户端的UDP通信</title>
      <link>https://whowin.gitee.io/post/blog/network/0013-udp_server_client_implementation_in_c/</link>
      <pubDate>Thu, 05 Jan 2023 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0013-udp_server_client_implementation_in_c/</guid>
      <description>&lt;p&gt;本文旨在使用简单的例子说明编写一个服务器/客户端模式的UDP通信程序的步骤，并通过一个实例给出了程序的基本框架，本文的程序在ubuntu 20.04中编译运行成功，gcc版本号为：9.4.0&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何使用raw socket发送UDP报文</title>
      <link>https://whowin.gitee.io/post/blog/network/0006-send_udp_with_raw_socket/</link>
      <pubDate>Tue, 27 Dec 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0006-send_udp_with_raw_socket/</guid>
      <description>&lt;p&gt;前面写的一篇《Linux下如何在数据链路层接收原始数据包》举了一个实例，使用raw socket接收UDP数据报，但是发送一个数据包比接收要复杂一些，本文以一个实例说明如何使用raw socket发送一个UDP报文。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在Linux命令行下发送和接收UDP数据包</title>
      <link>https://whowin.gitee.io/post/blog/network/0005-send_udp_via_linux_cli/</link>
      <pubDate>Sat, 10 Dec 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0005-send_udp_via_linux_cli/</guid>
      <description>&lt;p&gt;众所周知，在传输层有两个常用的协议 TCP 和 UDP，本文介绍在 Linux 命令行下，如何使用 nc 命令发送或接收 UDP 数据包，这些命令的用法对调试 UDP 通信程序将有所帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux下如何在数据链路层接收原始数据包</title>
      <link>https://whowin.gitee.io/post/blog/network/0002-link_layer_programming/</link>
      <pubDate>Wed, 07 Dec 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0002-link_layer_programming/</guid>
      <description>&lt;p&gt;大多数的网络编程都是在应用层接收数据和发送数据的，本文介绍在数据链路层的网络编程方法，介绍如何在数据链路层直接接收从物理层发过来的原始数据数据包，文章给出了一个完整的范例程序。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux文件权限：setuid、setgid和sticky bit</title>
      <link>https://whowin.gitee.io/post/blog/linux/0012-setuid/</link>
      <pubDate>Thu, 25 Aug 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/linux/0012-setuid/</guid>
      <description>&lt;p&gt;Linux 下的文件权限管理分为三组：拥有者、组、其它用户，文件权限分为读、写、执行，但其实并不仅仅如此，还有 setuid、setgid、sticky bit 这一组标志，本文通过一个可执行文件的权限 4755 展开介绍 setuid、setgid 和 sticky bit 的概念，希望本文对读者理解 Linux 文件权限管理能有所帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apt update 如何工作</title>
      <link>https://whowin.gitee.io/post/blog/linux/0008-apt-update-ubuntu/</link>
      <pubDate>Sun, 10 Jul 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/linux/0008-apt-update-ubuntu/</guid>
      <description>&lt;p&gt;本文简单介绍了在 &lt;em&gt;ubuntu&lt;/em&gt; 的命令行下运行 &lt;em&gt;apt update&lt;/em&gt; 时，软件包管理工具 &lt;em&gt;apt&lt;/em&gt; 所执行的实际动作，相信此文会让你对 &lt;em&gt;ubuntu&lt;/em&gt; 的包管理系统有更好的了解&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
