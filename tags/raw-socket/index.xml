<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raw socket on whowin - 发表我个人原创作品的技术博客</title>
    <link>https://whowin.gitee.io/tags/raw-socket/</link>
    <description>Recent content in raw socket on whowin - 发表我个人原创作品的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 09 Feb 2023 16:43:29 +0800</lastBuildDate><atom:link href="https://whowin.gitee.io/tags/raw-socket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用raw socket发送magic packet</title>
      <link>https://whowin.gitee.io/post/blog/network/0015-send-magic-packet-via-raw-socket/</link>
      <pubDate>Thu, 09 Feb 2023 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0015-send-magic-packet-via-raw-socket/</guid>
      <description>&lt;p&gt;Magic Packet是进行网络唤醒的数据包，将这个数据包以广播的形式发到局域网上，与数据包中所关联的MAC相同的电脑就会被唤醒开机，通常我们都是使用UDP报文的形式来发送这个数据包，但实际上在进行网络唤醒的时候，只要报文中包含Magic Packet应该就可以唤醒相关的计算机，与IP协议、UDP协议没有任何关系，本文将试图抛开网络层(IP层)和传输层(TCP/UDP层)，直接在数据链路层发出Magic Packet，并成功实现网络唤醒，本文将提供完整的源代码。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>接收arp请求并发送回应的实例</title>
      <link>https://whowin.gitee.io/post/blog/network/0007-recv-arp-request-and-reply/</link>
      <pubDate>Thu, 12 Jan 2023 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0007-recv-arp-request-and-reply/</guid>
      <description>&lt;p&gt;本文简单介绍了arp协议，用一个实例查看收到的ARP请求，并对该请求发出ARP回应，实例有完整的源代码，使用C语言在Linux下实现，代码中有详细的注释。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何使用raw socket发送UDP报文</title>
      <link>https://whowin.gitee.io/post/blog/network/0006-send-udp-with-raw-socket/</link>
      <pubDate>Tue, 27 Dec 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0006-send-udp-with-raw-socket/</guid>
      <description>&lt;p&gt;使用raw socket发送报文比接收报文要复杂一些，因为需要在程序中构建数据链路层、网络层和传输层的报头，本文以发送UDP报文为例说明在使用raw socket时如何构建数据链路层、网络层和传输层的报头并发送报文，文中给出了完整的源程序；本文假定读者掌握了基本的IPv4下的socket编程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux下如何在数据链路层接收原始数据包</title>
      <link>https://whowin.gitee.io/post/blog/network/0002-link-layer-programming/</link>
      <pubDate>Wed, 07 Dec 2022 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0002-link-layer-programming/</guid>
      <description>&lt;p&gt;大多数的网络编程都是在应用层接收数据和发送数据的，程序员无需关注报文的各种报头，网络协议栈会解决这些问题，本文介绍在数据链路层的网络编程方法，介绍如何在数据链路层直接接收从物理层发过来的原始数据包，要得到数据，必须自己解开数据链路层、网络层和传输层的报头，文章给出了一个完整的范例程序，希望本文能帮助读者对网络通信有更深刻的理解。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
