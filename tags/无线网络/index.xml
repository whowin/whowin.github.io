<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>无线网络 on whowin - 发表我个人原创作品的技术博客</title>
    <link>https://whowin.gitee.io/tags/%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C/</link>
    <description>Recent content in 无线网络 on whowin - 发表我个人原创作品的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 13 Apr 2024 16:43:29 +0800</lastBuildDate><atom:link href="https://whowin.gitee.io/tags/%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>libiw中的函数说明</title>
      <link>https://whowin.gitee.io/post/blog/network/0027-libiw-functions/</link>
      <pubDate>Sat, 13 Apr 2024 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0027-libiw-functions/</guid>
      <description>&lt;p&gt;打开电脑连接wifi是一件很平常的事情，但这些事情通常都是操作系统下的wifi管理程序替我们完成的，如何在程序中连接指定的wifi其实很少有资料介绍，在网络专栏的文章中，有两篇是关于wfi编程的文章，其中对无线网卡的操作都是通过ioctl()完成的，显得有些繁琐和晦涩，但其实WE(Wireless Extensions)有一个简单的库libiw，这个库的实现也是使用ioctl()，但是经过封装后，会使wifi编程变得容易一些，本文为一篇资料类的文章，主要描述libiw中API的调用方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux下使用libiw进行无线信号扫描的实例</title>
      <link>https://whowin.gitee.io/post/blog/network/0026-how-to-connect-wifi-in-c-under-linux/</link>
      <pubDate>Sat, 13 Apr 2024 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0026-how-to-connect-wifi-in-c-under-linux/</guid>
      <description>&lt;p&gt;打开电脑连接wifi是一件很平常的事情，但这些事情通常都是操作系统下的wifi管理程序替我们完成的，如何在程序中连接指定的wifi其实很少有资料介绍，本文将讨论在Linux下使用C语言连接wifi的方法，本文给出的实例不使用任何第三方软件和库，就可以连接到指定的wifi上，本文将给出完整的源代码，本文程序在 ubuntu 20.04 下编译测试完成，gcc 版本号 9.4.0；尽管本文内容主要涉及无线网络，但读者并不需要对 802.11 标准有所了解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux下使用libiw进行无线信号扫描的实例</title>
      <link>https://whowin.gitee.io/post/blog/network/0026-wifi-scanner-with-libiw/</link>
      <pubDate>Sat, 13 Apr 2024 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0026-wifi-scanner-with-libiw/</guid>
      <description>&lt;p&gt;打开电脑连接wifi是一件很平常的事情，但这些事情通常都是操作系统下的wifi管理程序替我们完成的，如何在程序中连接指定的wifi其实很少有资料介绍，本文将讨论在Linux下使用C语言连接wifi的方法，本文给出的实例不使用任何第三方软件和库，就可以连接到指定的wifi上，本文将给出完整的源代码，本文程序在 ubuntu 20.04 下编译测试完成，gcc 版本号 9.4.0；尽管本文内容主要涉及无线网络，但读者并不需要对 802.11 标准有所了解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用ioctl扫描wifi信号获取信号属性的实例(二)</title>
      <link>https://whowin.gitee.io/post/blog/network/0025-another-wifi-scanner-example/</link>
      <pubDate>Thu, 11 Apr 2024 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0025-another-wifi-scanner-example/</guid>
      <description>&lt;p&gt;使用工具软件扫描 wifi 信号是一件很平常的事情，在知晓 wifi 密码的前提下，通常我们会尽可能地连接信号质量比较好的 wifi 信号，但是如何通过编程来扫描 wifi 信号并获得这些信号的属性(比如信号强度等)，却鲜有文章提及，本文在前面博文的基础上通过实例向读者介绍如何通过编程扫描 wifi 信号，并获得信号的一系列的属性，本文给出了完整的源代码，本文程序在 ubuntu 20.04 下编译测试完成，gcc 版本号 9.4.0；阅读本文并不需要对 IEEE802.11 协议有所了解，但本文实例中大量涉及链表和指针，所以本文可能不适合初学者阅读。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用ioctl扫描wifi信号获取信号属性的实例(一)</title>
      <link>https://whowin.gitee.io/post/blog/network/0022-how-to-scan-wifi-signal/</link>
      <pubDate>Mon, 26 Jun 2023 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/network/0022-how-to-scan-wifi-signal/</guid>
      <description>&lt;p&gt;使用 wifi 是一件再平常不过的是事情，有很多 wifi 工具可以帮助你扫描附近的 wifi 信号，测试信号强度等，但如何通过编程来操作 wifi 却鲜有文章涉及；本文立足实践，不使用任何第三方库，仅使用 ioctl 扫描附近的 wifi 信号，并获取这些 AP 的 ESSID、MAC 地址、占用信道和工作频率，本文将给出完整的源程序，今后还会写一些文章讨论如果编程获取 wifi 信号的其它属性(比如：信号强度、加密方式等)的方法，敬请关注；本文程序在 ubuntu 20.04 下编译测试完成，gcc 版本号 9.4.0；阅读本文并不需要对 IEEE802.11 协议有所了解。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
