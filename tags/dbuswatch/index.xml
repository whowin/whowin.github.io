<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DBusWatch on whowin - 发表我个人原创作品的技术博客</title>
    <link>https://whowin.gitee.io/tags/dbuswatch/</link>
    <description>Recent content in DBusWatch on whowin - 发表我个人原创作品的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 25 Dec 2023 16:43:29 +0800</lastBuildDate><atom:link href="https://whowin.gitee.io/tags/dbuswatch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IPC之十四：使用libdbus通过select()接收D-Bus消息的实例</title>
      <link>https://whowin.gitee.io/post/blog/linux/0024-select-recv-message/</link>
      <pubDate>Mon, 25 Dec 2023 16:43:29 +0800</pubDate>
      
      <guid>https://whowin.gitee.io/post/blog/linux/0024-select-recv-message/</guid>
      <description>&lt;p&gt;在『进程间通信』系列文章中前面已经有三篇关于D-Bus的文章，本文继续讨论D-Bus；libdbus抽象了实现IPC时实际使用的方式(管道、socket等)，libdbus允许在一个D-Bus连接上添加一个watch，通过watch对实际IPC中使用的文件描述符进行监视，本文讨论了如何在D-Bus连接中添加watch，如何使用在socket编程中常用的select从D-Bus返回的文件描述符中接收到D-Bus消息，本文给出了具体实例，附有完整的源代码；本文实例在 Ubuntu 20.04 上编译测试通过，gcc版本号为：9.4.0；本文不适合 Linux 编程的初学者阅读。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
